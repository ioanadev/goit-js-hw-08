{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,uBAC1CE,QAAQC,IAAIF,GACZ,MAAMG,EAAYL,SAASC,cAAc,sBAEnCK,EAAcN,SAASC,cAAc,wBAG3C,SAASM,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiBI,IACjBC,YAAW,KACTD,EAAQN,EAAS,GAChBC,EAAM,EAGQO,IACjBD,YAAW,KACTC,EAAOR,EAAS,GACfC,EAAM,E,CAKfV,EAAKkB,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAMV,EAAQW,SAASlB,EAAWmB,OAClClB,QAAQC,IAAIK,GACZ,MAAMa,EAAOF,SAASf,EAAUgB,OAC1BE,EAASjB,EAAYe,MAC3BlB,QAAQC,IAAImB,GAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MACMC,EAAehB,EAAQe,EAAIF,EACjCf,EAFiBiB,EAAI,EAEGC,GACrBC,MAAKlB,IAEJ,IAAImB,EAAiB,qBAAqBnB,QAAeiB,MACzD5B,EAAA+B,OAAOC,QAAQF,EAAe,IAG/BG,OAAMtB,IAEL,IAAIuB,EAAiB,oBAAoBvB,QAAeiB,MACxD5B,EAAA+B,OAAOI,QAAQD,EAAe,G","sources":["src/js/tema 9/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n//console.log(form);\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconsole.log(delayInput);\nconst stepInput = document.querySelector('input[name=\"step\"]');\n//console.log(step);\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n//console.log(amount);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(position);\n      }, delay);\n    });\n  } else {\n    return new Promise(reject => {\n      setTimeout(() => {\n        reject(position);\n      }, delay);\n    });\n  }\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = parseInt(delayInput.value);\n  console.log(delay);\n  const step = parseInt(stepInput.value);\n  const amount = amountInput.value;\n  console.log(amount);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n    createPromise(position, currentDelay)\n      .then(position => {\n        //console.log(`Fulfilled promise ${position} in ${currentDelay}ms`);\n        var successMessage = `Fulfilled promise ${position} in ${currentDelay}ms`;\n        Notify.success(successMessage);\n      })\n\n      .catch(position => {\n        // console.log(`Rejected promise ${position} in ${currentDelay}ms`);\n        var feilureMessage = `Rejected promise ${position} in ${currentDelay}ms`;\n        Notify.failure(feilureMessage);\n      });\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$0b525fc14b532769$var$form","document","querySelector","$0b525fc14b532769$var$delayInput","console","log","$0b525fc14b532769$var$stepInput","$0b525fc14b532769$var$amountInput","$0b525fc14b532769$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","addEventListener","e","preventDefault","parseInt","value","step","amount","i","currentDelay","then","successMessage","Notify","success","catch","feilureMessage","failure"],"version":3,"file":"03-promises.cd20f480.js.map"}