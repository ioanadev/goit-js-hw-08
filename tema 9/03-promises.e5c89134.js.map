{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,uBAC1CE,QAAQC,IAAIF,GACZ,IAAMG,EAAYL,SAASC,cAAc,sBAEnCK,EAAcN,SAASC,cAAc,wBAoB3CF,EAAKQ,iBAAiB,UAAU,SAAAC,G,kBAS5B,IACMC,EAAeC,EAAQC,EAAIC,GA3BrC,SAAuBC,EAAUH,GAC/B,IAAMI,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAAAI,GACjBC,YAAW,WACTD,EAAQL,E,GACPH,E,EAGc,SAAAU,GACjBD,YAAW,WACTC,EAAOP,E,GACNH,E,IAgBLW,CAFiBV,EAAI,EAEGF,GACrBa,MAAK,SAAAT,GAEJ,IAAIU,EAAiB,qBAAoCC,OAAfX,EAAS,QAAmBW,OAAbf,EAAa,MACtEZ,EAAA4B,OAAOC,QAAQH,E,IAGhBI,OAAM,SAAAd,GAEL,IAAIe,EAAiB,oBAAmCJ,OAAfX,EAAS,QAAmBW,OAAbf,EAAa,MACrEZ,EAAA4B,OAAOI,QAAQD,E,KApBrBpB,EAAEsB,iBACF,IAAMpB,EAAQqB,SAAS7B,EAAW8B,OAClC7B,QAAQC,IAAIM,GACZ,IAAME,EAAOmB,SAAS1B,EAAU2B,OAC1BC,EAAS3B,EAAY0B,MAC3B7B,QAAQC,IAAI6B,GAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,E","sources":["src/js/tema 9/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n//console.log(form);\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconsole.log(delayInput);\nconst stepInput = document.querySelector('input[name=\"step\"]');\n//console.log(step);\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n//console.log(amount);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(position);\n      }, delay);\n    });\n  } else {\n    return new Promise(reject => {\n      setTimeout(() => {\n        reject(position);\n      }, delay);\n    });\n  }\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = parseInt(delayInput.value);\n  console.log(delay);\n  const step = parseInt(stepInput.value);\n  const amount = amountInput.value;\n  console.log(amount);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n    createPromise(position, currentDelay)\n      .then(position => {\n        //console.log(`Fulfilled promise ${position} in ${currentDelay}ms`);\n        var successMessage = `Fulfilled promise ${position} in ${currentDelay}ms`;\n        Notify.success(successMessage);\n      })\n\n      .catch(position => {\n        // console.log(`Rejected promise ${position} in ${currentDelay}ms`);\n        var feilureMessage = `Rejected promise ${position} in ${currentDelay}ms`;\n        Notify.failure(feilureMessage);\n      });\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$dfee54bc4b2a47e7$var$form","document","querySelector","$dfee54bc4b2a47e7$var$delayInput","console","log","$dfee54bc4b2a47e7$var$stepInput","$dfee54bc4b2a47e7$var$amountInput","addEventListener","e","currentDelay","delay","i","step","position","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","$dfee54bc4b2a47e7$var$createPromise","then","successMessage","concat","Notify","success","catch","feilureMessage","failure","preventDefault","parseInt","value","amount","i1","_loop"],"version":3,"file":"03-promises.e5c89134.js.map"}